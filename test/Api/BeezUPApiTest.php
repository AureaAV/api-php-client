<?php
/**
 * BeezUPApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * BeezUPApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BeezUPApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for activateUserAccount
     *
     * Activate the user account.
     *
     */
    public function testActivateUserAccount()
    {

    }

    /**
     * Test case for autoConfigureAutoImportInterval
     *
     * Configure Auto Import Interval.
     *
     */
    public function testAutoConfigureAutoImportInterval()
    {

    }

    /**
     * Test case for autoDeleteAutoImport
     *
     * Delete Auto Import.
     *
     */
    public function testAutoDeleteAutoImport()
    {

    }

    /**
     * Test case for autoGetAutoImportConfiguration
     *
     * Get the auto import configuration.
     *
     */
    public function testAutoGetAutoImportConfiguration()
    {

    }

    /**
     * Test case for autoPauseAutoImport
     *
     * Pause Auto Import.
     *
     */
    public function testAutoPauseAutoImport()
    {

    }

    /**
     * Test case for autoResumeAutoImport
     *
     * Resume Auto Import.
     *
     */
    public function testAutoResumeAutoImport()
    {

    }

    /**
     * Test case for autoScheduleAutoImport
     *
     * Configure Auto Import Schedules.
     *
     */
    public function testAutoScheduleAutoImport()
    {

    }

    /**
     * Test case for autoStartAutoImport
     *
     * Start Auto Import Manually.
     *
     */
    public function testAutoStartAutoImport()
    {

    }

    /**
     * Test case for catalogChangeCatalogColumnUserName
     *
     * Change Catalog Column User Name.
     *
     */
    public function testCatalogChangeCatalogColumnUserName()
    {

    }

    /**
     * Test case for catalogChangeCustomColumnExpression
     *
     * Change custom column expression.
     *
     */
    public function testCatalogChangeCustomColumnExpression()
    {

    }

    /**
     * Test case for catalogChangeCustomColumnUserName
     *
     * Change Custom Column User Name.
     *
     */
    public function testCatalogChangeCustomColumnUserName()
    {

    }

    /**
     * Test case for catalogComputeExpression
     *
     * Compute the expression for this catalog..
     *
     */
    public function testCatalogComputeExpression()
    {

    }

    /**
     * Test case for catalogDeleteCustomColumn
     *
     * Delete custom column.
     *
     */
    public function testCatalogDeleteCustomColumn()
    {

    }

    /**
     * Test case for catalogGetBeezUPColumns
     *
     * Get the BeezUP columns.
     *
     */
    public function testCatalogGetBeezUPColumns()
    {

    }

    /**
     * Test case for catalogGetCatalogColumns
     *
     * Get catalog column list.
     *
     */
    public function testCatalogGetCatalogColumns()
    {

    }

    /**
     * Test case for catalogGetCategories
     *
     * Get category list.
     *
     */
    public function testCatalogGetCategories()
    {

    }

    /**
     * Test case for catalogGetCustomColumnExpression
     *
     * Get the encrypted custom column expression.
     *
     */
    public function testCatalogGetCustomColumnExpression()
    {

    }

    /**
     * Test case for catalogGetCustomColumns
     *
     * Get custom column list.
     *
     */
    public function testCatalogGetCustomColumns()
    {

    }

    /**
     * Test case for catalogGetProduct
     *
     * Get product.
     *
     */
    public function testCatalogGetProduct()
    {

    }

    /**
     * Test case for catalogGetProducts
     *
     * Get product list.
     *
     */
    public function testCatalogGetProducts()
    {

    }

    /**
     * Test case for catalogGetRandomProducts
     *
     * Get random product list.
     *
     */
    public function testCatalogGetRandomProducts()
    {

    }

    /**
     * Test case for catalogSaveCustomColumn
     *
     * Create or replace a custom column.
     *
     */
    public function testCatalogSaveCustomColumn()
    {

    }

    /**
     * Test case for changeOrder
     *
     * Change your marketplace Order Information (accept, ship, etc.).
     *
     */
    public function testChangeOrder()
    {

    }

    /**
     * Test case for changeOrderList
     *
     * Send a batch of operations to change your marketplace Order information (accept, ship, etc.).
     *
     */
    public function testChangeOrderList()
    {

    }

    /**
     * Test case for changePassword
     *
     * Change user password.
     *
     */
    public function testChangePassword()
    {

    }

    /**
     * Test case for clearMerchantOrderInfo
     *
     * Clear an Order's merchant information.
     *
     */
    public function testClearMerchantOrderInfo()
    {

    }

    /**
     * Test case for clearMerchantOrderInfoList
     *
     * Send a batch of operations to clear an Order's merchant information.
     *
     */
    public function testClearMerchantOrderInfoList()
    {

    }

    /**
     * Test case for configureAutomaticTransitions
     *
     * Configure new or existing automatic Order status transition.
     *
     */
    public function testConfigureAutomaticTransitions()
    {

    }

    /**
     * Test case for configureChannelCatalogCostSettings
     *
     * Disable a channel catalog.
     *
     */
    public function testConfigureChannelCatalogCostSettings()
    {

    }

    /**
     * Test case for configureChannelCatalogExclusionFilters
     *
     * Configure channel catalog exclusion filters.
     *
     */
    public function testConfigureChannelCatalogExclusionFilters()
    {

    }

    /**
     * Test case for configureChannelCatalogGeneralSettings
     *
     * Disable a channel catalog.
     *
     */
    public function testConfigureChannelCatalogGeneralSettings()
    {

    }

    /**
     * Test case for createChannelCatalog
     *
     * Create a new channel catalog.
     *
     */
    public function testCreateChannelCatalog()
    {

    }

    /**
     * Test case for createContract
     *
     * Create a new contract.
     *
     */
    public function testCreateContract()
    {

    }

    /**
     * Test case for createRule
     *
     * Rule creation.
     *
     */
    public function testCreateRule()
    {

    }

    /**
     * Test case for createStore
     *
     * Create a new store.
     *
     */
    public function testCreateStore()
    {

    }

    /**
     * Test case for deleteChannelCatalog
     *
     * Delete the channel catalog.
     *
     */
    public function testDeleteChannelCatalog()
    {

    }

    /**
     * Test case for deleteChannelCatalogProductValueOverride
     *
     * Delete a specific channel catalog product value override.
     *
     */
    public function testDeleteChannelCatalogProductValueOverride()
    {

    }

    /**
     * Test case for deleteNextContract
     *
     * Delete your next contract.
     *
     */
    public function testDeleteNextContract()
    {

    }

    /**
     * Test case for deleteReportFilter
     *
     * Delete the report filter.
     *
     */
    public function testDeleteReportFilter()
    {

    }

    /**
     * Test case for deleteRule
     *
     * Delete Rule.
     *
     */
    public function testDeleteRule()
    {

    }

    /**
     * Test case for deleteShare
     *
     * Delete a share to another user.
     *
     */
    public function testDeleteShare()
    {

    }

    /**
     * Test case for deleteStore
     *
     * Delete a store.
     *
     */
    public function testDeleteStore()
    {

    }

    /**
     * Test case for disableChannelCatalog
     *
     * Disable a channel catalog.
     *
     */
    public function testDisableChannelCatalog()
    {

    }

    /**
     * Test case for disableChannelCatalogProduct
     *
     * Disable channel catalog product.
     *
     */
    public function testDisableChannelCatalogProduct()
    {

    }

    /**
     * Test case for disableRule
     *
     * Disable rule.
     *
     */
    public function testDisableRule()
    {

    }

    /**
     * Test case for enableChannelCatalog
     *
     * Enable a channel catalog.
     *
     */
    public function testEnableChannelCatalog()
    {

    }

    /**
     * Test case for enableRule
     *
     * Enable rule.
     *
     */
    public function testEnableRule()
    {

    }

    /**
     * Test case for exportOrders
     *
     * Request a new Order report exportation to be generated.
     *
     */
    public function testExportOrders()
    {

    }

    /**
     * Test case for exportStoreReportByCategory
     *
     * Export the report by category.
     *
     */
    public function testExportStoreReportByCategory()
    {

    }

    /**
     * Test case for exportStoreReportByChannel
     *
     * Export the report by channel.
     *
     */
    public function testExportStoreReportByChannel()
    {

    }

    /**
     * Test case for exportStoreReportByProduct
     *
     * Export the report by product.
     *
     */
    public function testExportStoreReportByProduct()
    {

    }

    /**
     * Test case for getAutomaticTransitions
     *
     * Get list of configured automatic Order status transitions.
     *
     */
    public function testGetAutomaticTransitions()
    {

    }

    /**
     * Test case for getBillingPeriods
     *
     * Get billing periods conditions.
     *
     */
    public function testGetBillingPeriods()
    {

    }

    /**
     * Test case for getChannelCatalog
     *
     * Get the channel catalog information.
     *
     */
    public function testGetChannelCatalog()
    {

    }

    /**
     * Test case for getChannelCatalogCategories
     *
     * Get channel catalog categories.
     *
     */
    public function testGetChannelCatalogCategories()
    {

    }

    /**
     * Test case for getChannelCatalogExclusionFilterOperators
     *
     * Get channel catalog exclusion filter operators.
     *
     */
    public function testGetChannelCatalogExclusionFilterOperators()
    {

    }

    /**
     * Test case for getChannelCatalogMarketplaceProperties
     *
     * Get the marketplace properties for a channel catalog.
     *
     */
    public function testGetChannelCatalogMarketplaceProperties()
    {

    }

    /**
     * Test case for getChannelCatalogMarketplaceSettings
     *
     * Get the marketplace settings for a channel catalog.
     *
     */
    public function testGetChannelCatalogMarketplaceSettings()
    {

    }

    /**
     * Test case for getChannelCatalogProductInfo
     *
     * Get channel catalog product information.
     *
     */
    public function testGetChannelCatalogProductInfo()
    {

    }

    /**
     * Test case for getChannelCatalogProductInfoList
     *
     * Get channel catalog product information list.
     *
     */
    public function testGetChannelCatalogProductInfoList()
    {

    }

    /**
     * Test case for getChannelCatalogs
     *
     * List all your current channel catalogs.
     *
     */
    public function testGetChannelCatalogs()
    {

    }

    /**
     * Test case for getChannelCategories
     *
     * Get channel categories.
     *
     */
    public function testGetChannelCategories()
    {

    }

    /**
     * Test case for getChannelColumns
     *
     * Get channel columns.
     *
     */
    public function testGetChannelColumns()
    {

    }

    /**
     * Test case for getChannelInfo
     *
     * Get channel information.
     *
     */
    public function testGetChannelInfo()
    {

    }

    /**
     * Test case for getContracts
     *
     * Get contract list.
     *
     */
    public function testGetContracts()
    {

    }

    /**
     * Test case for getCreditCardInfo
     *
     * Get credit card information.
     *
     */
    public function testGetCreditCardInfo()
    {

    }

    /**
     * Test case for getCurrentChannels
     *
     * List all available channel for this store.
     *
     */
    public function testGetCurrentChannels()
    {

    }

    /**
     * Test case for getFriendInfo
     *
     * Get friend information.
     *
     */
    public function testGetFriendInfo()
    {

    }

    /**
     * Test case for getInvoices
     *
     * Get all your invoices.
     *
     */
    public function testGetInvoices()
    {

    }

    /**
     * Test case for getMarketplaceAccountStores
     *
     * Get  you marketplace channel catalog list.
     *
     */
    public function testGetMarketplaceAccountStores()
    {

    }

    /**
     * Test case for getMarketplaceAccountsSynchronization
     *
     * Get current synchronization status between your marketplaces and BeezUP accounts.
     *
     */
    public function testGetMarketplaceAccountsSynchronization()
    {

    }

    /**
     * Test case for getOffer
     *
     * Get offer pricing.
     *
     */
    public function testGetOffer()
    {

    }

    /**
     * Test case for getOrder
     *
     * Get full Order and Order Item(s) properties.
     *
     */
    public function testGetOrder()
    {

    }

    /**
     * Test case for getOrderExportations
     *
     * Get a paginated list of Order report exportations.
     *
     */
    public function testGetOrderExportations()
    {

    }

    /**
     * Test case for getOrderHistory
     *
     * Get an Order's harvest and change history.
     *
     */
    public function testGetOrderHistory()
    {

    }

    /**
     * Test case for getOrderListFull
     *
     * Get a paginated list of all Orders with all Order and Order Item(s) properties.
     *
     */
    public function testGetOrderListFull()
    {

    }

    /**
     * Test case for getOrderListLight
     *
     * Get a paginated list of all Orders without details.
     *
     */
    public function testGetOrderListLight()
    {

    }

    /**
     * Test case for getPublications
     *
     * Fetch the publication history for an account, sorted by descending start date.
     *
     */
    public function testGetPublications()
    {

    }

    /**
     * Test case for getReportFilter
     *
     * Get the report filter description.
     *
     */
    public function testGetReportFilter()
    {

    }

    /**
     * Test case for getReportFilters
     *
     * Get report filter list for the given store.
     *
     */
    public function testGetReportFilters()
    {

    }

    /**
     * Test case for getRights
     *
     * Get store's rights.
     *
     */
    public function testGetRights()
    {

    }

    /**
     * Test case for getRule
     *
     * Gets the rule.
     *
     */
    public function testGetRule()
    {

    }

    /**
     * Test case for getRules
     *
     * Gets the list of rules for a given store.
     *
     */
    public function testGetRules()
    {

    }

    /**
     * Test case for getRulesExecutions
     *
     * Get the rules execution history.
     *
     */
    public function testGetRulesExecutions()
    {

    }

    /**
     * Test case for getShares
     *
     * Get shares related to this store.
     *
     */
    public function testGetShares()
    {

    }

    /**
     * Test case for getStandardOffers
     *
     * Get all standard offers.
     *
     */
    public function testGetStandardOffers()
    {

    }

    /**
     * Test case for getStore
     *
     * Get store's information.
     *
     */
    public function testGetStore()
    {

    }

    /**
     * Test case for getStoreAlerts
     *
     * Get store's alerts.
     *
     */
    public function testGetStoreAlerts()
    {

    }

    /**
     * Test case for getStoreReportByCategory
     *
     * Get the report by category.
     *
     */
    public function testGetStoreReportByCategory()
    {

    }

    /**
     * Test case for getStoreReportByChannel
     *
     * Get the report by channel.
     *
     */
    public function testGetStoreReportByChannel()
    {

    }

    /**
     * Test case for getStoreReportByDay
     *
     * Get the report by day.
     *
     */
    public function testGetStoreReportByDay()
    {

    }

    /**
     * Test case for getStoreReportByDayExport
     *
     * Get the report by day.
     *
     */
    public function testGetStoreReportByDayExport()
    {

    }

    /**
     * Test case for getStoreReportByProduct
     *
     * Get the report by product.
     *
     */
    public function testGetStoreReportByProduct()
    {

    }

    /**
     * Test case for getStoreTrackedClicks
     *
     * Get the latest clicks tracked.
     *
     */
    public function testGetStoreTrackedClicks()
    {

    }

    /**
     * Test case for getStoreTrackedExternalOrders
     *
     * Get the latest external orders tracked.
     *
     */
    public function testGetStoreTrackedExternalOrders()
    {

    }

    /**
     * Test case for getStoreTrackedOrders
     *
     * Get the latest orders tracked.
     *
     */
    public function testGetStoreTrackedOrders()
    {

    }

    /**
     * Test case for getStoreTrackingStatus
     *
     * Get store tracking synchronization status.
     *
     */
    public function testGetStoreTrackingStatus()
    {

    }

    /**
     * Test case for getStores
     *
     * Get store list.
     *
     */
    public function testGetStores()
    {

    }

    /**
     * Test case for getTrackingStatus
     *
     * Display the synchronization status of the clicks and orders.
     *
     */
    public function testGetTrackingStatus()
    {

    }

    /**
     * Test case for getUserAccountInfo
     *
     * Get user account information.
     *
     */
    public function testGetUserAccountInfo()
    {

    }

    /**
     * Test case for getUserListGroup
     *
     * Get list of values related to this group name.
     *
     */
    public function testGetUserListGroup()
    {

    }

    /**
     * Test case for getUserListGroupNames
     *
     * Get list of group of list name.
     *
     */
    public function testGetUserListGroupNames()
    {

    }

    /**
     * Test case for getUserListNames
     *
     * Get all list names.
     *
     */
    public function testGetUserListNames()
    {

    }

    /**
     * Test case for getUserListOfValues
     *
     * Get the list of values related to this list name.
     *
     */
    public function testGetUserListOfValues()
    {

    }

    /**
     * Test case for harvestAll
     *
     * Send harvest request to all your marketplaces.
     *
     */
    public function testHarvestAll()
    {

    }

    /**
     * Test case for harvestOrder
     *
     * Send harvest request for a single Order.
     *
     */
    public function testHarvestOrder()
    {

    }

    /**
     * Test case for importationActivateAutoImport
     *
     * Activate the auto importation of the last successful manual catalog importation..
     *
     */
    public function testImportationActivateAutoImport()
    {

    }

    /**
     * Test case for importationCancel
     *
     * Cancel importation.
     *
     */
    public function testImportationCancel()
    {

    }

    /**
     * Test case for importationCommit
     *
     * Commit Importation.
     *
     */
    public function testImportationCommit()
    {

    }

    /**
     * Test case for importationCommitColumns
     *
     * Commit columns.
     *
     */
    public function testImportationCommitColumns()
    {

    }

    /**
     * Test case for importationConfigureCatalogColumn
     *
     * Configure catalog column.
     *
     */
    public function testImportationConfigureCatalogColumn()
    {

    }

    /**
     * Test case for importationConfigureRemainingCatalogColumns
     *
     * Configure remaining catalog columns.
     *
     */
    public function testImportationConfigureRemainingCatalogColumns()
    {

    }

    /**
     * Test case for importationDeleteCustomColumn
     *
     * Delete Custom Column.
     *
     */
    public function testImportationDeleteCustomColumn()
    {

    }

    /**
     * Test case for importationGetCustomColumnExpression
     *
     * Get the encrypted custom column expression in this importation.
     *
     */
    public function testImportationGetCustomColumnExpression()
    {

    }

    /**
     * Test case for importationGetCustomColumns
     *
     * Get custom columns currently place in this importation.
     *
     */
    public function testImportationGetCustomColumns()
    {

    }

    /**
     * Test case for importationGetDetectedCatalogColumns
     *
     * Get detected catalog columns during this importation..
     *
     */
    public function testImportationGetDetectedCatalogColumns()
    {

    }

    /**
     * Test case for importationGetImportationMonitoring
     *
     * Get the importation status.
     *
     */
    public function testImportationGetImportationMonitoring()
    {

    }

    /**
     * Test case for importationGetManualUpdateLastInputConfig
     *
     * Get the last input configuration.
     *
     */
    public function testImportationGetManualUpdateLastInputConfig()
    {

    }

    /**
     * Test case for importationGetProductSample
     *
     * Get the product sample related to this importation with all columns (catalog and custom).
     *
     */
    public function testImportationGetProductSample()
    {

    }

    /**
     * Test case for importationGetProductSampleCustomColumnValue
     *
     * Get product sample custom column value related to this importation..
     *
     */
    public function testImportationGetProductSampleCustomColumnValue()
    {

    }

    /**
     * Test case for importationGetReportings
     *
     * Get the latest catalog importation reporting.
     *
     */
    public function testImportationGetReportings()
    {

    }

    /**
     * Test case for importationIgnoreColumn
     *
     * Ignore Column.
     *
     */
    public function testImportationIgnoreColumn()
    {

    }

    /**
     * Test case for importationMapCatalogColumn
     *
     * Map catalog column to a BeezUP column.
     *
     */
    public function testImportationMapCatalogColumn()
    {

    }

    /**
     * Test case for importationMapCustomColumn
     *
     * Map custom column to a BeezUP column.
     *
     */
    public function testImportationMapCustomColumn()
    {

    }

    /**
     * Test case for importationReattendColumn
     *
     * Reattend Column.
     *
     */
    public function testImportationReattendColumn()
    {

    }

    /**
     * Test case for importationSaveCustomColumn
     *
     * Create or replace a custom column.
     *
     */
    public function testImportationSaveCustomColumn()
    {

    }

    /**
     * Test case for importationStartManualUpdate
     *
     * Start Manual Import.
     *
     */
    public function testImportationStartManualUpdate()
    {

    }

    /**
     * Test case for importationTechnicalProgression
     *
     * Get technical progression.
     *
     */
    public function testImportationTechnicalProgression()
    {

    }

    /**
     * Test case for importationUnmapCatalogColumn
     *
     * Unmap catalog column.
     *
     */
    public function testImportationUnmapCatalogColumn()
    {

    }

    /**
     * Test case for importationUnmapCustomColumn
     *
     * Unmap custom column.
     *
     */
    public function testImportationUnmapCustomColumn()
    {

    }

    /**
     * Test case for logout
     *
     * Log out the current user from go2.
     *
     */
    public function testLogout()
    {

    }

    /**
     * Test case for mapChannelCatalogCategory
     *
     * Map channel catalog category.
     *
     */
    public function testMapChannelCatalogCategory()
    {

    }

    /**
     * Test case for mapChannelCatalogColumns
     *
     * Configure channel catalog column mappings.
     *
     */
    public function testMapChannelCatalogColumns()
    {

    }

    /**
     * Test case for moveDownRule
     *
     * Move the rule down.
     *
     */
    public function testMoveDownRule()
    {

    }

    /**
     * Test case for moveUpRule
     *
     * Move the rule up.
     *
     */
    public function testMoveUpRule()
    {

    }

    /**
     * Test case for optimise
     *
     * Optimise products.
     *
     */
    public function testOptimise()
    {

    }

    /**
     * Test case for optimiseByCategory
     *
     * Optimise products's category.
     *
     */
    public function testOptimiseByCategory()
    {

    }

    /**
     * Test case for optimiseByChannel
     *
     * Optimise products's category.
     *
     */
    public function testOptimiseByChannel()
    {

    }

    /**
     * Test case for optimiseByProduct
     *
     * Optimise products.
     *
     */
    public function testOptimiseByProduct()
    {

    }

    /**
     * Test case for overrideChannelCatalogProductOverrides
     *
     * Override channel catalog product values.
     *
     */
    public function testOverrideChannelCatalogProductOverrides()
    {

    }

    /**
     * Test case for reactivateCurrentContract
     *
     * Reactivate your terminated contract..
     *
     */
    public function testReactivateCurrentContract()
    {

    }

    /**
     * Test case for reenableChannelCatalogProduct
     *
     * Reenable channel catalog product.
     *
     */
    public function testReenableChannelCatalogProduct()
    {

    }

    /**
     * Test case for resendEmailActivation
     *
     * Resend email activation.
     *
     */
    public function testResendEmailActivation()
    {

    }

    /**
     * Test case for runRule
     *
     * Run rule.
     *
     */
    public function testRunRule()
    {

    }

    /**
     * Test case for runRules
     *
     * Run all rules for this store.
     *
     */
    public function testRunRules()
    {

    }

    /**
     * Test case for saveCompanyInfo
     *
     * Change company information.
     *
     */
    public function testSaveCompanyInfo()
    {

    }

    /**
     * Test case for saveCreditCardInfo
     *
     * Save user credit card info.
     *
     */
    public function testSaveCreditCardInfo()
    {

    }

    /**
     * Test case for savePersonalInfo
     *
     * Save user personal information.
     *
     */
    public function testSavePersonalInfo()
    {

    }

    /**
     * Test case for saveProfilePictureInfo
     *
     * Change user picture information.
     *
     */
    public function testSaveProfilePictureInfo()
    {

    }

    /**
     * Test case for saveReportFilter
     *
     * Save the report filter.
     *
     */
    public function testSaveReportFilter()
    {

    }

    /**
     * Test case for saveStoreAlert
     *
     * Save store alert.
     *
     */
    public function testSaveStoreAlert()
    {

    }

    /**
     * Test case for setChannelCatalogMarketplaceSettings
     *
     * Save new marketplace settings for a channel catalog.
     *
     */
    public function testSetChannelCatalogMarketplaceSettings()
    {

    }

    /**
     * Test case for setMerchantOrderInfo
     *
     * Set an Order's merchant information.
     *
     */
    public function testSetMerchantOrderInfo()
    {

    }

    /**
     * Test case for setMerchantOrderInfoList
     *
     * Send a batch of operations to set an Order's merchant information.
     *
     */
    public function testSetMerchantOrderInfoList()
    {

    }

    /**
     * Test case for share
     *
     * Share a store to another user.
     *
     */
    public function testShare()
    {

    }

    /**
     * Test case for terminateCurrentContract
     *
     * Schedule termination of your current contract at the end of the commitment..
     *
     */
    public function testTerminateCurrentContract()
    {

    }

    /**
     * Test case for unmapChannelCatalogCategory
     *
     * Unmap channel catalog category.
     *
     */
    public function testUnmapChannelCatalogCategory()
    {

    }

    /**
     * Test case for updateRule
     *
     * Update Rule.
     *
     */
    public function testUpdateRule()
    {

    }

    /**
     * Test case for updateStore
     *
     * Update some store's information..
     *
     */
    public function testUpdateStore()
    {

    }

}
