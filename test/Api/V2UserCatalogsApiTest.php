<?php
/**
 * V2UserCatalogsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * V2UserCatalogsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class V2UserCatalogsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for autoConfigureAutoImportInterval
     *
     * Configure Auto Import Interval.
     *
     */
    public function testAutoConfigureAutoImportInterval()
    {

    }

    /**
     * Test case for autoDeleteAutoImport
     *
     * Delete Auto Import.
     *
     */
    public function testAutoDeleteAutoImport()
    {

    }

    /**
     * Test case for autoGetAutoImportConfiguration
     *
     * Get the auto import configuration.
     *
     */
    public function testAutoGetAutoImportConfiguration()
    {

    }

    /**
     * Test case for autoPauseAutoImport
     *
     * Pause Auto Import.
     *
     */
    public function testAutoPauseAutoImport()
    {

    }

    /**
     * Test case for autoResumeAutoImport
     *
     * Resume Auto Import.
     *
     */
    public function testAutoResumeAutoImport()
    {

    }

    /**
     * Test case for autoScheduleAutoImport
     *
     * Configure Auto Import Schedules.
     *
     */
    public function testAutoScheduleAutoImport()
    {

    }

    /**
     * Test case for autoStartAutoImport
     *
     * Start Auto Import Manually.
     *
     */
    public function testAutoStartAutoImport()
    {

    }

    /**
     * Test case for catalogChangeCatalogColumnUserName
     *
     * Change Catalog Column User Name.
     *
     */
    public function testCatalogChangeCatalogColumnUserName()
    {

    }

    /**
     * Test case for catalogChangeCustomColumnExpression
     *
     * Change custom column expression.
     *
     */
    public function testCatalogChangeCustomColumnExpression()
    {

    }

    /**
     * Test case for catalogChangeCustomColumnUserName
     *
     * Change Custom Column User Name.
     *
     */
    public function testCatalogChangeCustomColumnUserName()
    {

    }

    /**
     * Test case for catalogComputeExpression
     *
     * Compute the expression for this catalog..
     *
     */
    public function testCatalogComputeExpression()
    {

    }

    /**
     * Test case for catalogDeleteCustomColumn
     *
     * Delete custom column.
     *
     */
    public function testCatalogDeleteCustomColumn()
    {

    }

    /**
     * Test case for catalogGetBeezUPColumns
     *
     * Get the BeezUP columns.
     *
     */
    public function testCatalogGetBeezUPColumns()
    {

    }

    /**
     * Test case for catalogGetCatalogColumns
     *
     * Get catalog column list.
     *
     */
    public function testCatalogGetCatalogColumns()
    {

    }

    /**
     * Test case for catalogGetCategories
     *
     * Get category list.
     *
     */
    public function testCatalogGetCategories()
    {

    }

    /**
     * Test case for catalogGetCustomColumnExpression
     *
     * Get the encrypted custom column expression.
     *
     */
    public function testCatalogGetCustomColumnExpression()
    {

    }

    /**
     * Test case for catalogGetCustomColumns
     *
     * Get custom column list.
     *
     */
    public function testCatalogGetCustomColumns()
    {

    }

    /**
     * Test case for catalogGetProduct
     *
     * Get product.
     *
     */
    public function testCatalogGetProduct()
    {

    }

    /**
     * Test case for catalogGetProducts
     *
     * Get product list.
     *
     */
    public function testCatalogGetProducts()
    {

    }

    /**
     * Test case for catalogGetRandomProducts
     *
     * Get random product list.
     *
     */
    public function testCatalogGetRandomProducts()
    {

    }

    /**
     * Test case for catalogSaveCustomColumn
     *
     * Create or replace a custom column.
     *
     */
    public function testCatalogSaveCustomColumn()
    {

    }

    /**
     * Test case for importationActivateAutoImport
     *
     * Activate the auto importation of the last successful manual catalog importation..
     *
     */
    public function testImportationActivateAutoImport()
    {

    }

    /**
     * Test case for importationCancel
     *
     * Cancel importation.
     *
     */
    public function testImportationCancel()
    {

    }

    /**
     * Test case for importationCommit
     *
     * Commit Importation.
     *
     */
    public function testImportationCommit()
    {

    }

    /**
     * Test case for importationCommitColumns
     *
     * Commit columns.
     *
     */
    public function testImportationCommitColumns()
    {

    }

    /**
     * Test case for importationConfigureCatalogColumn
     *
     * Configure catalog column.
     *
     */
    public function testImportationConfigureCatalogColumn()
    {

    }

    /**
     * Test case for importationConfigureRemainingCatalogColumns
     *
     * Configure remaining catalog columns.
     *
     */
    public function testImportationConfigureRemainingCatalogColumns()
    {

    }

    /**
     * Test case for importationDeleteCustomColumn
     *
     * Delete Custom Column.
     *
     */
    public function testImportationDeleteCustomColumn()
    {

    }

    /**
     * Test case for importationGetCustomColumnExpression
     *
     * Get the encrypted custom column expression in this importation.
     *
     */
    public function testImportationGetCustomColumnExpression()
    {

    }

    /**
     * Test case for importationGetCustomColumns
     *
     * Get custom columns currently place in this importation.
     *
     */
    public function testImportationGetCustomColumns()
    {

    }

    /**
     * Test case for importationGetDetectedCatalogColumns
     *
     * Get detected catalog columns during this importation..
     *
     */
    public function testImportationGetDetectedCatalogColumns()
    {

    }

    /**
     * Test case for importationGetImportationMonitoring
     *
     * Get the importation status.
     *
     */
    public function testImportationGetImportationMonitoring()
    {

    }

    /**
     * Test case for importationGetManualUpdateLastInputConfig
     *
     * Get the last input configuration.
     *
     */
    public function testImportationGetManualUpdateLastInputConfig()
    {

    }

    /**
     * Test case for importationGetProductSample
     *
     * Get the product sample related to this importation with all columns (catalog and custom).
     *
     */
    public function testImportationGetProductSample()
    {

    }

    /**
     * Test case for importationGetProductSampleCustomColumnValue
     *
     * Get product sample custom column value related to this importation..
     *
     */
    public function testImportationGetProductSampleCustomColumnValue()
    {

    }

    /**
     * Test case for importationGetReportings
     *
     * Get the latest catalog importation reporting.
     *
     */
    public function testImportationGetReportings()
    {

    }

    /**
     * Test case for importationIgnoreColumn
     *
     * Ignore Column.
     *
     */
    public function testImportationIgnoreColumn()
    {

    }

    /**
     * Test case for importationMapCatalogColumn
     *
     * Map catalog column to a BeezUP column.
     *
     */
    public function testImportationMapCatalogColumn()
    {

    }

    /**
     * Test case for importationMapCustomColumn
     *
     * Map custom column to a BeezUP column.
     *
     */
    public function testImportationMapCustomColumn()
    {

    }

    /**
     * Test case for importationReattendColumn
     *
     * Reattend Column.
     *
     */
    public function testImportationReattendColumn()
    {

    }

    /**
     * Test case for importationSaveCustomColumn
     *
     * Create or replace a custom column.
     *
     */
    public function testImportationSaveCustomColumn()
    {

    }

    /**
     * Test case for importationStartManualUpdate
     *
     * Start Manual Import.
     *
     */
    public function testImportationStartManualUpdate()
    {

    }

    /**
     * Test case for importationTechnicalProgression
     *
     * Get technical progression.
     *
     */
    public function testImportationTechnicalProgression()
    {

    }

    /**
     * Test case for importationUnmapCatalogColumn
     *
     * Unmap catalog column.
     *
     */
    public function testImportationUnmapCatalogColumn()
    {

    }

    /**
     * Test case for importationUnmapCustomColumn
     *
     * Unmap custom column.
     *
     */
    public function testImportationUnmapCustomColumn()
    {

    }

}
