<?php
/**
 * MarketplaceChannelCatalogLovLinks
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BeezUP API
 *
 * This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * MarketplaceChannelCatalogLovLinks Class Doc Comment
 *
 * @category    Class
 * @description Indicates the List Of Values related to the marketplace
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MarketplaceChannelCatalogLovLinks implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'marketplaceChannelCatalogLovLinks';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'shipping_method_lov' => '\Swagger\Client\Model\BeezUPCommonLOVLink3',
        'carrier_code_lov' => '\Swagger\Client\Model\BeezUPCommonLOVLink3',
        'cancelation_reason_code_lov' => '\Swagger\Client\Model\BeezUPCommonLOVLink3',
        'refund_reason_code_lov' => '\Swagger\Client\Model\BeezUPCommonLOVLink3'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'shipping_method_lov' => 'shippingMethodLOV',
        'carrier_code_lov' => 'carrierCodeLOV',
        'cancelation_reason_code_lov' => 'cancelationReasonCodeLOV',
        'refund_reason_code_lov' => 'refundReasonCodeLOV'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'shipping_method_lov' => 'setShippingMethodLov',
        'carrier_code_lov' => 'setCarrierCodeLov',
        'cancelation_reason_code_lov' => 'setCancelationReasonCodeLov',
        'refund_reason_code_lov' => 'setRefundReasonCodeLov'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'shipping_method_lov' => 'getShippingMethodLov',
        'carrier_code_lov' => 'getCarrierCodeLov',
        'cancelation_reason_code_lov' => 'getCancelationReasonCodeLov',
        'refund_reason_code_lov' => 'getRefundReasonCodeLov'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shipping_method_lov'] = isset($data['shipping_method_lov']) ? $data['shipping_method_lov'] : null;
        $this->container['carrier_code_lov'] = isset($data['carrier_code_lov']) ? $data['carrier_code_lov'] : null;
        $this->container['cancelation_reason_code_lov'] = isset($data['cancelation_reason_code_lov']) ? $data['cancelation_reason_code_lov'] : null;
        $this->container['refund_reason_code_lov'] = isset($data['refund_reason_code_lov']) ? $data['refund_reason_code_lov'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets shipping_method_lov
     * @return \Swagger\Client\Model\BeezUPCommonLOVLink3
     */
    public function getShippingMethodLov()
    {
        return $this->container['shipping_method_lov'];
    }

    /**
     * Sets shipping_method_lov
     * @param \Swagger\Client\Model\BeezUPCommonLOVLink3 $shipping_method_lov
     * @return $this
     */
    public function setShippingMethodLov($shipping_method_lov)
    {
        $this->container['shipping_method_lov'] = $shipping_method_lov;

        return $this;
    }

    /**
     * Gets carrier_code_lov
     * @return \Swagger\Client\Model\BeezUPCommonLOVLink3
     */
    public function getCarrierCodeLov()
    {
        return $this->container['carrier_code_lov'];
    }

    /**
     * Sets carrier_code_lov
     * @param \Swagger\Client\Model\BeezUPCommonLOVLink3 $carrier_code_lov
     * @return $this
     */
    public function setCarrierCodeLov($carrier_code_lov)
    {
        $this->container['carrier_code_lov'] = $carrier_code_lov;

        return $this;
    }

    /**
     * Gets cancelation_reason_code_lov
     * @return \Swagger\Client\Model\BeezUPCommonLOVLink3
     */
    public function getCancelationReasonCodeLov()
    {
        return $this->container['cancelation_reason_code_lov'];
    }

    /**
     * Sets cancelation_reason_code_lov
     * @param \Swagger\Client\Model\BeezUPCommonLOVLink3 $cancelation_reason_code_lov
     * @return $this
     */
    public function setCancelationReasonCodeLov($cancelation_reason_code_lov)
    {
        $this->container['cancelation_reason_code_lov'] = $cancelation_reason_code_lov;

        return $this;
    }

    /**
     * Gets refund_reason_code_lov
     * @return \Swagger\Client\Model\BeezUPCommonLOVLink3
     */
    public function getRefundReasonCodeLov()
    {
        return $this->container['refund_reason_code_lov'];
    }

    /**
     * Sets refund_reason_code_lov
     * @param \Swagger\Client\Model\BeezUPCommonLOVLink3 $refund_reason_code_lov
     * @return $this
     */
    public function setRefundReasonCodeLov($refund_reason_code_lov)
    {
        $this->container['refund_reason_code_lov'] = $refund_reason_code_lov;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


