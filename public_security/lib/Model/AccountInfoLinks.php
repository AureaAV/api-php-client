<?php
/**
 * AccountInfoLinks
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Customer
 *
 * This API will gives you the ability to : - manage your account - manage your stores - shares your stores with your friends - manage your contracts - access to your invoices
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * AccountInfoLinks Class Doc Comment
 *
 * @category    Class
 * @description The different actions you can make on this account
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AccountInfoLinks implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'accountInfoLinks';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'save_personal_info' => '\Swagger\Client\Model\LinksSavePersonalInfoLink',
        'change_password' => '\Swagger\Client\Model\LinksChangePasswordLink',
        'save_company_info' => '\Swagger\Client\Model\LinksSaveCompanyInfoLink',
        'get_profile_picture_info' => '\Swagger\Client\Model\LinksGetProfilePictureInfoLink',
        'save_profile_picture_info' => '\Swagger\Client\Model\LinksSaveProfilePictureInfoLink',
        'get_credit_card_info' => '\Swagger\Client\Model\LinksGetCreditCardInfoLink',
        'save_user_credit_card_link' => '\Swagger\Client\Model\LinksSaveCreditCardInfoLink'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'save_personal_info' => 'savePersonalInfo',
        'change_password' => 'changePassword',
        'save_company_info' => 'saveCompanyInfo',
        'get_profile_picture_info' => 'getProfilePictureInfo',
        'save_profile_picture_info' => 'saveProfilePictureInfo',
        'get_credit_card_info' => 'getCreditCardInfo',
        'save_user_credit_card_link' => 'saveUserCreditCardLink'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'save_personal_info' => 'setSavePersonalInfo',
        'change_password' => 'setChangePassword',
        'save_company_info' => 'setSaveCompanyInfo',
        'get_profile_picture_info' => 'setGetProfilePictureInfo',
        'save_profile_picture_info' => 'setSaveProfilePictureInfo',
        'get_credit_card_info' => 'setGetCreditCardInfo',
        'save_user_credit_card_link' => 'setSaveUserCreditCardLink'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'save_personal_info' => 'getSavePersonalInfo',
        'change_password' => 'getChangePassword',
        'save_company_info' => 'getSaveCompanyInfo',
        'get_profile_picture_info' => 'getGetProfilePictureInfo',
        'save_profile_picture_info' => 'getSaveProfilePictureInfo',
        'get_credit_card_info' => 'getGetCreditCardInfo',
        'save_user_credit_card_link' => 'getSaveUserCreditCardLink'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['save_personal_info'] = isset($data['save_personal_info']) ? $data['save_personal_info'] : null;
        $this->container['change_password'] = isset($data['change_password']) ? $data['change_password'] : null;
        $this->container['save_company_info'] = isset($data['save_company_info']) ? $data['save_company_info'] : null;
        $this->container['get_profile_picture_info'] = isset($data['get_profile_picture_info']) ? $data['get_profile_picture_info'] : null;
        $this->container['save_profile_picture_info'] = isset($data['save_profile_picture_info']) ? $data['save_profile_picture_info'] : null;
        $this->container['get_credit_card_info'] = isset($data['get_credit_card_info']) ? $data['get_credit_card_info'] : null;
        $this->container['save_user_credit_card_link'] = isset($data['save_user_credit_card_link']) ? $data['save_user_credit_card_link'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['save_personal_info'] === null) {
            $invalid_properties[] = "'save_personal_info' can't be null";
        }
        if ($this->container['change_password'] === null) {
            $invalid_properties[] = "'change_password' can't be null";
        }
        if ($this->container['save_company_info'] === null) {
            $invalid_properties[] = "'save_company_info' can't be null";
        }
        if ($this->container['get_profile_picture_info'] === null) {
            $invalid_properties[] = "'get_profile_picture_info' can't be null";
        }
        if ($this->container['save_profile_picture_info'] === null) {
            $invalid_properties[] = "'save_profile_picture_info' can't be null";
        }
        if ($this->container['get_credit_card_info'] === null) {
            $invalid_properties[] = "'get_credit_card_info' can't be null";
        }
        if ($this->container['save_user_credit_card_link'] === null) {
            $invalid_properties[] = "'save_user_credit_card_link' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['save_personal_info'] === null) {
            return false;
        }
        if ($this->container['change_password'] === null) {
            return false;
        }
        if ($this->container['save_company_info'] === null) {
            return false;
        }
        if ($this->container['get_profile_picture_info'] === null) {
            return false;
        }
        if ($this->container['save_profile_picture_info'] === null) {
            return false;
        }
        if ($this->container['get_credit_card_info'] === null) {
            return false;
        }
        if ($this->container['save_user_credit_card_link'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets save_personal_info
     * @return \Swagger\Client\Model\LinksSavePersonalInfoLink
     */
    public function getSavePersonalInfo()
    {
        return $this->container['save_personal_info'];
    }

    /**
     * Sets save_personal_info
     * @param \Swagger\Client\Model\LinksSavePersonalInfoLink $save_personal_info
     * @return $this
     */
    public function setSavePersonalInfo($save_personal_info)
    {
        $this->container['save_personal_info'] = $save_personal_info;

        return $this;
    }

    /**
     * Gets change_password
     * @return \Swagger\Client\Model\LinksChangePasswordLink
     */
    public function getChangePassword()
    {
        return $this->container['change_password'];
    }

    /**
     * Sets change_password
     * @param \Swagger\Client\Model\LinksChangePasswordLink $change_password
     * @return $this
     */
    public function setChangePassword($change_password)
    {
        $this->container['change_password'] = $change_password;

        return $this;
    }

    /**
     * Gets save_company_info
     * @return \Swagger\Client\Model\LinksSaveCompanyInfoLink
     */
    public function getSaveCompanyInfo()
    {
        return $this->container['save_company_info'];
    }

    /**
     * Sets save_company_info
     * @param \Swagger\Client\Model\LinksSaveCompanyInfoLink $save_company_info
     * @return $this
     */
    public function setSaveCompanyInfo($save_company_info)
    {
        $this->container['save_company_info'] = $save_company_info;

        return $this;
    }

    /**
     * Gets get_profile_picture_info
     * @return \Swagger\Client\Model\LinksGetProfilePictureInfoLink
     */
    public function getGetProfilePictureInfo()
    {
        return $this->container['get_profile_picture_info'];
    }

    /**
     * Sets get_profile_picture_info
     * @param \Swagger\Client\Model\LinksGetProfilePictureInfoLink $get_profile_picture_info
     * @return $this
     */
    public function setGetProfilePictureInfo($get_profile_picture_info)
    {
        $this->container['get_profile_picture_info'] = $get_profile_picture_info;

        return $this;
    }

    /**
     * Gets save_profile_picture_info
     * @return \Swagger\Client\Model\LinksSaveProfilePictureInfoLink
     */
    public function getSaveProfilePictureInfo()
    {
        return $this->container['save_profile_picture_info'];
    }

    /**
     * Sets save_profile_picture_info
     * @param \Swagger\Client\Model\LinksSaveProfilePictureInfoLink $save_profile_picture_info
     * @return $this
     */
    public function setSaveProfilePictureInfo($save_profile_picture_info)
    {
        $this->container['save_profile_picture_info'] = $save_profile_picture_info;

        return $this;
    }

    /**
     * Gets get_credit_card_info
     * @return \Swagger\Client\Model\LinksGetCreditCardInfoLink
     */
    public function getGetCreditCardInfo()
    {
        return $this->container['get_credit_card_info'];
    }

    /**
     * Sets get_credit_card_info
     * @param \Swagger\Client\Model\LinksGetCreditCardInfoLink $get_credit_card_info
     * @return $this
     */
    public function setGetCreditCardInfo($get_credit_card_info)
    {
        $this->container['get_credit_card_info'] = $get_credit_card_info;

        return $this;
    }

    /**
     * Gets save_user_credit_card_link
     * @return \Swagger\Client\Model\LinksSaveCreditCardInfoLink
     */
    public function getSaveUserCreditCardLink()
    {
        return $this->container['save_user_credit_card_link'];
    }

    /**
     * Sets save_user_credit_card_link
     * @param \Swagger\Client\Model\LinksSaveCreditCardInfoLink $save_user_credit_card_link
     * @return $this
     */
    public function setSaveUserCreditCardLink($save_user_credit_card_link)
    {
        $this->container['save_user_credit_card_link'] = $save_user_credit_card_link;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


